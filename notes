app.get('/', async (req, res) => {
  try {
    const records = await getAllRecords();
    res.render('index', { records });
  } catch (error) {
    console.error('Error fetching records:', error);
    res.status(500).send('Error fetching records');
  }
});

// Route handler for the /read endpoint
app.get('/read', (req, res) => {
  // Render the read.ejs page
  res.render('read');
});

// Route handler for updating a record
app.put('/update/:id', async (req, res) => {
  const { id } = req.params;
  const { name, age, email } = req.body;
  try {
    const updatedRecord = await updateRecord(id, name, age, email);
    res.send(updatedRecord);
  } catch (error) {
    console.error('Error updating record:', error);
    res.status(500).send('Error updating record');
  }
});

// Route handler for the /update endpoint
app.get('/update', (req, res) => {
  // Render the update.ejs page
  res.render('update');
});

// Function to retrieve a record by its ID from the database
async function getRecordById(id) {
  try {
    // Query the database to retrieve the record with the specified ID
    const result = await pool.query('SELECT * FROM users WHERE id = $1', [id]);
    // Check if a record was found
    if (result.rows.length === 0) {
      throw new Error('Record not found');
    }
    // Return the retrieved record
    return result.rows[0];
  } catch (error) {
    throw new Error('Error fetching record by ID:', error);
  }
}

// Function to retrieve a record by its ID from the database
const getRecordById = function(req, res) {
  const id = parseInt(req.params.id);
  const sql = 'SELECT * FROM users WHERE id = $1';

  pool.query(sql, [id], (error, result) => {
    if (error) {
      console.error('Error fetching record:', error);
      res.status(500).send('Error fetching record');
      return;
    }

    if (result.rows.length === 0) {
      // Record not found
      res.status(404).send('Record not found');
      return;
    }

    // Record found, send the record data
    res.status(200).json(result.rows[0]);
  });
};